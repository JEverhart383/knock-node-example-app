DATABASE_URL=postgresql://meryldakin@localhost:5432/example-collaboration-app

# Required for triggering Knock workflows
KNOCK_API_KEY=sk_test_rsXI-7lY0DwmIeEno0E8iQqTe5Fxj-qS28Xv4RO7k5w

# Required for Knock's notification React feed component to render correctly
BLITZ_PUBLIC_KNOCK_CLIENT_ID=pk_test_35rU4And6ZfQ2uzyCRfn_7yjEJ8iWDc0uP-xFlnW3Vs
BLITZ_PUBLIC_KNOCK_FEED_ID=14d5be8c-d2fd-4432-89d1-be3216597e55

# Slack notification configuration
# -------------------------
# Find your app from the dropdown at https://api.slack.com/apps, then
# under Basic Info > App Credentials you'll find the Client ID and the Signing Secret
# you'll add to the BLITZ_PUBLIC_SLACK_CLIENT_ID and SLACK_CLIENT_SECRET respectively
BLITZ_PUBLIC_SLACK_CLIENT_ID=316649739635.6044366967089
SLACK_CLIENT_SECRET=94ffc276e3b00f210b374ff48b114b38
# The Slack handler in app/api/slack-cb.ts will handle configuring your Slack bot in Knock after it's
#
# , use the address of your ngrok tunnel (https://ngrok.com/)
# that you use to expose the port where this example app is running and add `/api/slack-cb`.
# It will look like this: https://415a-135-84-167-61.ngrok-free.app/api/slack-cb
# You'll also need to add this redirect URL to Slack so it knows it's authorized.
# Go to your app at https://api.slack.com/apps/<APP_ID>/oauth and you'll find the Redirect URLs
# segment where you can add it.
BLITZ_PUBLIC_SLACK_REDIRECT_URI=<Slack redirect URI>
# You can find your Slack Channel ID in the Knock dashboard under
# https://knock-dev.app/<ACCOUNT SLUG>/integrations/channels, navigate to
# the slack channel you want to use and you'll find its ID on the page
BLITZ_PUBLIC_KNOCK_SLACK_CHANNEL_ID=6d829e89-4bb3-42bf-9e47-8047380e5958

# Segment integration configuration
BLITZ_PUBLIC_ENABLE_SEGMENT=false
BLITZ_PUBLIC_SEGMENT_WRITE_KEY=<Segment write key>


# TEMP
BLITZ_PUBLIC_TENANT_ACCESS_TOKEN_TEMP=xoxb-6032846988247-6040750339430-YoHdmOrDKLQdVF6dKBtHZDCI
